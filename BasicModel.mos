model LongTermMarketEquilibrium
  uses "mmxprs","mmsystem","mmjobs"
  !! Reading data from file
  filename := "DataReal.txt";

declarations
  ! number of generator
  nbGen: integer
  !number of Regions
  nbRegions: integer
  ! number of hours
  nbHours: integer
end-declarations

! Read The various numbers from The file
initializations from filename
  nbGen nbRegions nbHours
end-initializations

declarations
  ! set of Generator
  U = 1..nbGen
  ! set of Regions
  R = 1..nbRegions
  ! set of hours(Times)
  T = 1..nbHours

  ! The generation cost
  cVar: array(R,U) of real
  cFix: array(R,U) of real

  ! generation capacity
  ! K: array(U,R) of real

  ! demand
  RD2015: array(R,T) of real
  RD2021: array(R,T) of real
  RD2030: array(R,T) of real
  ! The Transport capacity from one Region To another
  psi:array(R,R) of real

  ! The variables
  ! The average production power To generate U units of power at Time T and Region R
  y: array(U,R,T) of mpvar
  !
  Knew: array(U,R) of mpvar
  ! power flow from one Region To another
  P:array(R,R) of mpvar
end-declarations

initializations from filename
  cVar cFix RD2015 RD2021 RD2030 psi
end-initializations

! the constraints
forall(r in R) do
  forall(u in U) do
    forall(t in T) do
      y(u,r,t) >= 0
      y(u,r,t) <=  Knew(u,r)
    end-do
  end-do
end-do


forall(t in T, r in R) do
sum(u in U) y(u,r,t) >= RD2015(r,t) + sum(rBar in R) P(r,rBar)
!sum(u in U) y(u,r,t) >= RD2021(r,t) + sum(rBar in R) P(r,rBar)
!sum(u in U) y(u,r,t) >= RD2030(r,t) + sum(rBar in R) P(r,rBar)
end-do

forall(r in R, rBar in R) do
P(r,rBar) <= psi(r,rBar)
end-do

! The objective
objective1:= sum(u in U, r in R, t in T) y(u,r,t)*cVar(r,u)
objective2:= sum(u in U, r in R)Knew(u,r)*cFix(r,u)
objective:= objective1 + objective2
minimise(objective)

! Results output
write("what happened")
writeln("total: ",getobjval)


end-model
